#!/usr/bin/env python
import ConfigParser, os, sys
import urllib
import urlparse
import inspect
from pprint import pprint
from httplib  import HTTPSConnection, HTTPConnection, HTTPException

class BillingRSClient:
    
    headers = {'Accept': 'application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5',
           'Content-Type': 'application/x-www-form-urlencoded',
           'User-Agent': 'Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/532.5 (KHTML, like Gecko) Chrome/4.0.249.30 Safari/532.5'}

    host = 'manage.rackspacecloud.com'
    cookie = ''
    
    def __init__(self):
        """Reads config file and authenticates"""
        
        config = ConfigParser.ConfigParser()
        config.read(os.path.expanduser("~/.rackspacerc"))
        if not config.has_section('web'):
            print "No web part defined in config file!"
            sys.exit(1)
        self.login = config.get('web', 'login')
        self.passwd = config.get('web', 'passwd')
    def authenticate(self):
        """authenticates to the web interface and sets cookie"""
        self.cookie = self.makeRequest(rtype='GET', rurl='/pages/Login.jsp').getheader('set-cookie')
        self.headers['set-cookie'] = self.cookie
        self.headers['cookie'] = self.cookie
        self.makeRequest(rtype='POST', rurl='/Login.do', rparams=urllib.urlencode({'username': login, 'password': passwd}), rheaders=self.headers)



    def makeRequest(self,rtype, rurl, rparams='', rheaders):
        """makeRequest is a wrapper to do HTTPRequest"""
        try:
            conn = HTTPSConnection(self.host, '443')
            conn.request('GET', authURL, '', headers=self.headers)
            response = conn.getresponse()
        except Exception, e:
            raise e
        finally:
            conn.close()
        return response

    def getBillingInfo(self):
        """This makes a deal!"""
        
authURL = "/pages/Login.jsp"


conn = HTTPSConnection(host, '443')
conn.request('GET', authURL, '', headers=headers)
response = conn.getresponse()

cookie = response.getheader('set-cookie')
conn.close()
conn = HTTPSConnection(host, '443')
headers['set-cookie'] = cookie
headers['cookie'] = cookie
conn.request('POST', '/Login.do', urllib.urlencode({'username': login, 'password': passwd}), headers)
authresponse = conn.getresponse()

conn.close()
conn = HTTPSConnection(host, '443')
conn.request('GET', '/CloudServers/ViewUsageReports.do', '', headers)
tableresponse = conn.getresponse()
data = tableresponse.read()
conn.close()


marker = 'tableData'
for lin in data.split('\n'):
    if marker in lin:
        rawbilltable = lin

rawbilltable = rawbilltable.replace('   tableData0:', '')
rawbilltable = rawbilltable.replace("\\\"", '\"')
rawbilltable = rawbilltable.lstrip("\"")
rawbilltable = rawbilltable.rstrip("\",")


billtable = eval(rawbilltable)

pprint(billtable)


